@(do 
   (defun either-contains? (r1 r2 fn)
     (defun contains? (r1 r2)
       [fn (in-range r1 (from r2)) (in-range r1 (to r2))])
     (if (or (contains? r1 r2) (contains? r2 r1)) 1 0)))
@(bind (p1 p2) (0 0))
@(repeat)
@l1-@u1,@l2-@u2
@(do (let ((r1 (rcons (toint l1) (toint u1)))
           (r2 (rcons (toint l2) (toint u2))))
       (inc p1 (either-contains? r1 r2 'and))
       (inc p2 (either-contains? r1 r2 'or))))
@(end)
@(output)
Part1: @p1
Part2: @p2
@(end)
